#pragma checksum "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\Home\Index.cshtml" "{ff1816ec-aa5e-4d10-87f7-6f4963833460}" "295e8a0b5fee0f2237bc019629623b5d47f9bef9"
// <auto-generated/>
#pragma warning disable 1591
[assembly: global::Microsoft.AspNetCore.Razor.Hosting.RazorCompiledItemAttribute(typeof(AspNetCore.Views_Home_Index), @"mvc.1.0.view", @"/Views/Home/Index.cshtml")]
[assembly:global::Microsoft.AspNetCore.Mvc.Razor.Compilation.RazorViewAttribute(@"/Views/Home/Index.cshtml", typeof(AspNetCore.Views_Home_Index))]
namespace AspNetCore
{
    #line hidden
    using System;
    using System.Collections.Generic;
    using System.Linq;
    using System.Threading.Tasks;
    using Microsoft.AspNetCore.Mvc;
    using Microsoft.AspNetCore.Mvc.Rendering;
    using Microsoft.AspNetCore.Mvc.ViewFeatures;
#line 1 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\_ViewImports.cshtml"
using HolidayWeb;

#line default
#line hidden
#line 2 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\_ViewImports.cshtml"
using HolidayWeb.Models;

#line default
#line hidden
#line 3 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\_ViewImports.cshtml"
using HolidayWeb.ViewModels;

#line default
#line hidden
#line 4 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\_ViewImports.cshtml"
using Microsoft.AspNetCore.Identity;

#line default
#line hidden
#line 5 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\_ViewImports.cshtml"
using HolidayWeb.Models.Interface;

#line default
#line hidden
#line 9 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\_ViewImports.cshtml"
using DevExtreme.AspNet.Mvc;

#line default
#line hidden
#line 1 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\Home\Index.cshtml"
using Microsoft.AspNetCore.Identity.EntityFrameworkCore;

#line default
#line hidden
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"295e8a0b5fee0f2237bc019629623b5d47f9bef9", @"/Views/Home/Index.cshtml")]
    [global::Microsoft.AspNetCore.Razor.Hosting.RazorSourceChecksumAttribute(@"SHA1", @"e802824f0a87a76790eef0422afbdfbaea3e2561", @"/Views/_ViewImports.cshtml")]
    public class Views_Home_Index : global::Microsoft.AspNetCore.Mvc.Razor.RazorPage<MainViewModel>
    {
        #pragma warning disable 1998
        public async override global::System.Threading.Tasks.Task ExecuteAsync()
        {
#line 3 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\Home\Index.cshtml"
  
    Layout = "~/Views/Shared/_FrontPageLayout.cshtml";

#line default
#line hidden
#line 6 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\Home\Index.cshtml"
  
    bool isUserLoggedIn = ViewBag.Users != null;

#line default
#line hidden
            BeginContext(200, 104, true);
            WriteLiteral("\r\n<div class=\"row\">\r\n    <div class=\"column left dx-datagrid-filter-panel\" style=\"width:auto\">\r\n        ");
            EndContext();
            BeginContext(305, 84, false);
#line 12 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\Home\Index.cshtml"
   Write(await Html.PartialAsync("~/Views/Home/_DepartmentList.cshtml", Model.DepartmentList));

#line default
#line hidden
            EndContext();
            BeginContext(389, 86, true);
            WriteLiteral("\r\n    </div>\r\n    <div class=\"column middle\">\r\n        <h2>Main Content</h2>\r\n        ");
            EndContext();
            BeginContext(477, 6164, false);
#line 16 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\Home\Index.cshtml"
    Write(Html.DevExtreme().Scheduler()
        .ID("scheduler")
        .DataSource(d => d.Mvc()
                                .Controller("SchedulerData")
                                .Key("AppointmentId")
                                .LoadAction("Get")
                                .UpdateAction("Put")
                                .InsertAction("Post")
                                .DeleteAction("Delete"))
                                .TextExpr("Description")
                                .StartDateExpr("StartDate")
                                .EndDateExpr("EndDate")

                                //.Disabled()
                                //                                                                    .Views(new SchedulerViewType[] { SchedulerViewType.Day, SchedulerViewType.TimelineMonth, SchedulerViewType.WorkWeek, SchedulerViewType.Week, SchedulerViewType.Agenda })
                                .Views(new SchedulerViewType[] { SchedulerViewType.Week, SchedulerViewType.TimelineMonth })
                                .CurrentView(SchedulerViewType.Week)
                                .CurrentDate(new DateTime(2019, 3, 7))
                                .FirstDayOfWeek(FirstDayOfWeek.Sunday)

                                .Option("editing.allowResizing", false)
                                .Option("editing.allowDragging", false)
                                .Option("editing.allowDeleting", isUserLoggedIn)
                                .Option("editing.allowAdding", isUserLoggedIn)
                                .Option("editing.allowUpdating", isUserLoggedIn)
                                //.Disabled(new JS("testJs"))
                                //                            .OnContentReady("setDataSource")
                                .OnAppointmentClick("setDataSource")


                                

                                                                                .StartDayHour(9)
                                                                                .EndDayHour(18)
                                                                                .CellDuration(120)
                                                                                .MaxAppointmentsPerCell(5)
                                                                                .Resources(res =>
                                                                                {
                                                                                    res.Add()
                                                                            .FieldExpr("StartPeriod")
                                                                            .AllowMultiple(false)
                                                                            .Label("Start Period")
                                                                            .DataSource
                                                                            (new object[] {
//new { id = 0, text = "Morning", color = "#1e90ff" },
//new { id = 1, text = "Afternoon", color = "#ff9747" }});

new { id = 0, text = "Morning" },
new { id = 1, text = "Afternoon" }});

                                                                                    res.Add()
                                                                            .FieldExpr("EndPeriod")
                                                                            .AllowMultiple(false)
                                                                            .Label("End Period")
                                                                            .DataSource
                                                                            (new object[] {
new { id = 0, text = "Morning"},
new { id = 1, text = "Afternoon"}});

                                                                                    res.Add()
                                                                            .FieldExpr("StatusKey")
                                                                            .AllowMultiple(false)
                                                                            .Label("Status")
                                                                            .DataSource
                                                                            (new object[] {
new { id = 0, text = "Requested"},
new { id = 1, text = "Confirmed"},
new { id = 2, text = "Denied"}
                                                                                });

                                                                                    res.Add()
                                                                            .FieldExpr("UserID")
                                                                            .AllowMultiple(false)
                                                                            .ColorExpr("colorHighlight")
                                                                            .Label("remove me")
                                                                            .DataSource(Model.DepartmentUserList.ToList()).DisplayExpr("UserName").ValueExpr("Id");

                                                                                    res.Add()
                                                                            .FieldExpr("UserID")
                                                                            .AllowMultiple(false)
                                                                            .Label("User")
                                                                            .DataSource(Model.UserList.ToList()).DisplayExpr("UserName").ValueExpr("Id");

                                                                                }
                                                                                )
                                                                                .Height(580)
        );

#line default
#line hidden
            EndContext();
            BeginContext(7324, 54, true);
            WriteLiteral("\r\n    </div>\r\n    <div class=\"column right\">\r\n        ");
            EndContext();
            BeginContext(7379, 86, false);
#line 115 "C:\HolidayManager\DevExtremeAspNetCoreApp3\Views\Home\Index.cshtml"
   Write(await Html.PartialAsync("~/Views/User/_UserStatView.cshtml", Model.DepartmentUserList));

#line default
#line hidden
            EndContext();
            BeginContext(7465, 36, true);
            WriteLiteral("\r\n    </div>\r\n</div>\r\n\r\n<script>\r\n\r\n");
            EndContext();
            BeginContext(7597, 403, true);
            WriteLiteral(@"    var AppointmentData




    function setDataSource(e) {

        //this one fies the event
        //$.post(""Home/WebAPIService"");
        alert(1);
        //var scheduler = $(""#scheduler"").dxScheduler(""getDataSource"");
        //var scheduler = $(""#scheduler"");

        var scheduler = $(""#scheduler"").dxScheduler(""instance"");
        alert(2);


        alert(scheduler.ID);

");
            EndContext();
            BeginContext(8099, 3500, true);
            WriteLiteral(@"//        $.post(""ApiControllers/SchedulerData/Index"");
//        $.post(""SchedulerData/Index"");
        //Controller(""SchedulerData"").GetJSONJQuery()

        //AppointmentData = dataSource
    }





    function getSchedulerInstance() {
        return $(""#scheduler"").dxScheduler(""instance"");
    }

    function SelectAppointment(e) {
      alert(dataSource.typeof);
    }

    function getTrue() {
        return true
    }

    function getSchedulerInstance() {
        return $(""#scheduler"").dxScheduler(""instance"");
    }

    function getMovieById(id) {
        return DevExpress.data.query(moviesData)
                .filter(""ID"", id)
                .toArray()[0]
    }


    function testJs(e)
    {

        return false;

    }

    //function appointmentForm_created(data) {
    //    var form = data.form,
    //        movie = getMovieById(data.appointmentData.MovieId) || {},
    //        startDate = data.appointmentData.StartDate,
    //        endDate = da");
            WriteLiteral(@"ta.appointmentData.EndDate,
    //        price = data.appointmentData.Price;

    //    form.option(""items"", [{
    //        label: {
    //            text: ""Movie""
    //        },
    //        editorType: ""dxSelectBox"",
    //        dataField: ""MovieId"",
    //        editorOptions: {
    //            dataSource: moviesData,
    //            displayExpr: ""Text"",
    //            valueExpr: ""ID"",
    //            value: movie.ID,
    //            onValueChanged: function(args) {
    //                var movieInfo = getMovieById(args.value);

    //                form.getEditor(""Director"")
    //                    .option(""value"", movieInfo.Director);

    //                form.getEditor(""EndDate"")
    //                    .option(""value"", new Date(startDate.getTime() +
    //                        60 * 1000 * movieInfo.Duration));
    //            }
    //        },
    //    }, {
    //        label: {
    //            text: ""Director""
    //        },
    //  ");
            WriteLiteral(@"      name: ""Director"",
    //        editorType: ""dxTextBox"",
    //        editorOptions: {
    //            value: movie.Director,
    //            readOnly: true
    //        }
    //    }, {
    //        dataField: ""StartDate"",
    //        editorType: ""dxDateBox"",
    //        editorOptions: {
    //            value: startDate,
    //            width: ""100%"",
    //            type: ""datetime"",
    //            onValueChanged: function(args) {
    //                startDate = args.value;
    //                form.getEditor(""EndDate"")
    //                    .option(""value"", new Date(startDate.getTime() +
    //                        60 * 1000 * movie.Duration));
    //            }
    //        }
    //    }, {
    //        name: ""EndDate"",
    //        dataField: ""EndDate"",
    //        editorType: ""dxDateBox"",
    //        editorOptions: {
    //            value: endDate,
    //            width: ""100%"",
    //            type: ""datetime"",
    //        ");
            WriteLiteral(@"    readOnly: true
    //        }
    //    }, {
    //        dataField: ""Price"",
    //        editorType: ""dxRadioGroup"",
    //        editorOptions: {
    //            dataSource: [5, 10, 15, 20],
    //            itemTemplate: function(itemData) {
    //                return ""$"" + itemData;
    //            },
    //            value: price
    //        }
    //    }
    //    ]);
    //}
</script>");
            EndContext();
        }
        #pragma warning restore 1998
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.ViewFeatures.IModelExpressionProvider ModelExpressionProvider { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IUrlHelper Url { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.IViewComponentHelper Component { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IJsonHelper Json { get; private set; }
        [global::Microsoft.AspNetCore.Mvc.Razor.Internal.RazorInjectAttribute]
        public global::Microsoft.AspNetCore.Mvc.Rendering.IHtmlHelper<MainViewModel> Html { get; private set; }
    }
}
#pragma warning restore 1591
